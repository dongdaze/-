  今天看了下vue,打算仔细研究下，然后做点东西出来看看，先总结一下基本使用方法。

  基本语法

    双向的数据绑定：

      1.在单向中可以用{{message}}，然后在js中用data的方式输出；
      2.如果双向的话，可以用v-model=”message”，来实现双向绑定
      3.列表渲染，可以用 v-for=”item in items” 其中item是数组项，items是数组
      4.vue是mvvm的框架，把DOM绑定到了底层数据，以达到双向的数据绑定

    数据绑定

      1.绑定文本的话，需要实时更新就用 {{message}}
      2.绑定文本，只是单次插值，以后数据变化不影响数据绑定的话就用 {{*message}}
      3.绑定原始的html文档内容的话，就用 {{{message}}}，也就是三层括号
      4.在事件绑定中，可以采用v-bind和v-on，它们都有自己的缩写方式，
      5.比如v-bind可以用“:”号；v-on可以用“@”号

    样式绑定

      1.在动态修改css样式时候，既可以class=”{{className}}”;也可以用v-bind:class;
      2.当然可以传给v-bind:class一个对象，然后动态切换样式，也就是v-bind:class=”{}”
      3.也可以传给v-bind:class一个数组，然后动态切换样式，也就是v-bind:class=”[]”
      4.也可以用v-bind:style=”{}”/”[]”,用这种方式来绑定对象或者数组，可以实现样式切换  
  
  渲染

    条件渲染
    
      1.v-if=”” v-else=””   |   v-show=”” v-else=””
      2.都属于条件渲染，但是v-if在条件为假的情况下，根本不渲染；而v-show则是把display改为none；
      3.其中v-if 可以用在模板（template v-if）上使用，v-show不可以
      
    列表渲染
    
      1.v-for=”item in items”  遍历数组items中的每一项item，且可以在模板上进行渲染
      2.$index是数组元素的索引
      3.$key返回键值
      
    修改数组
    
      1.修改数组中的某一项，可以用$set(index,{message:message})
      2.删除数组中的某一项，可以用$remove(item)
      
    方法与事件处理
    
      1.v-on:事件=方法
      2.可以用  .stop阻止事件冒泡 .prevent来阻止事件默认行为
      
    表单控件
    
      1.v-model可以创建双向数据绑定，使用方法是在显示的内容块中进行数据绑定，然后在表单控件中实行v-model=绑定的变量名；
      2.v-model可以用在text框、多行文本框、单选、复选框、下拉框只要数据绑定和v-model一样即可
      3.下拉框可以用v-for的条件渲染
      4.可以为input加入类名，比如：
      5.number，把字符串转化为number类型
      6.debounce，设置响应延迟，实际上它延迟的是写入数据的时间
